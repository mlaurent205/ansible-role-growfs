---
- name: add hosts to molecule inventory

  hosts: localhost

  connection: local

  gather_facts: false

  no_log: "{{ molecule_no_log }}"

  vars_files:
    - ./vars.yml

  tasks:

    - name: add localhost to molecule group
      add_host:
        name: localhost
        ansible_connection: local
        groups:
          - molecule
      when: not (aws_provision | default('no')) | bool

    - block:

        - name: query info for existing instances
          ec2_instance_info:
            region: "{{ aws_env_region }}"
            filters:
              "tag:ansible_environment": "{{ aws_env_name }}"
              "tag:ansible_project": "{{ aws_project_name }}"
              "instance-state-name": [ "pending", "running" ]
          register: ec2_instance_query

        - name: initialize instance metadata
          set_fact:
            ec2_instance_facts: {}

        - name: build existing instance metadata
          set_fact:
            ec2_instance_facts: "{{ ec2_instance_facts | combine({ item.tags.Name: item}) }}"
          loop_control:
            label: "{{ item.instance_id }}"
          loop: "{{ ec2_instance_query.instances }}"
          when:
            - item.tags is defined
            - item.tags.Name is defined

        - name: add hosts to inventory
          add_host:
            hostname: "{{ item.key }}"
            ansible_user: "{{ item.value.tags.ansible_user }}"
            ansible_host: "{{ item.value.public_ip_address }}"
            ansible_ssh_private_key_file: "{{ molecule_key_pair_path }}"
            instance_id: "{{ item.value.instance_id }}"
            groups:
              - molecule
          loop_control:
            label: "{{ item.key }}"
          loop: "{{ ec2_instance_facts | dict2items }}"

      when: (aws_provision | default('no')) | bool


- name: add guests to inventory

  hosts: molecule

  become: yes

  vars_files:
    - ./vars.yml

  tasks:

    - name: add guests to inventory
      add_host:
        name: "{{ guest_hostname }}"
        groups:
          - guests
        ansible_user: molecule
        ansible_host: "{{ guest_address }}"
        ansible_port: "{{ guest_port }}"
        ansible_ssh_private_key_file: "{{ kvm_key_pair_path }}"
        partitioning_method: "{{ guest.installer_partitioning_method }}"
        disk_size: "{{ guest.installer_disk_size }}"
        installer_type: "{{ guest.installer_type }}"
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
        bridge_address: "{{ guest.installer_interface.ipaddress }}"
        snat_address: "{{ ansible_host }}"
        guest_address: "{{ (aws_provision | default('no') | bool) | ternary(snat_address, bridge_address) }}"
        bridge_port: 22
        snat_port: "{{ (ssh_port_base | int) + (port_offset | int) }}"
        guest_port: "{{ (aws_provision | default('no') | bool) | ternary(snat_port, bridge_port) }}"
      loop_control:
        loop_var: guest
        index_var: port_offset
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"
